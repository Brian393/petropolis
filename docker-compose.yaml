version: "3.7"

services:
  client:
    build:
      dockerfile: Dockerfile
      context: ./app/client
    image: dev-client
    volumes:
      - /app/node_modules
      - ./app/client:/app
    container_name: dev-client

  geoserver:
    image: oscarfonts/geoserver:2.17.0
    volumes:
      - ./app/geoserver/geoserver_data:/var/local/geoserver
      - ./app/geoserver/geoserver_exts:/var/local/geoserver-exts/
      - ./app/geoserver/gwc:/var/local/gwc/
      - ./app/geoserver/web.xml:/usr/local/geoserver/WEB-INF/web.xml
    env_file:
      - ./app/config/docker-env/geoserver.env
    container_name: dev-geoserver
    restart: on-failure
    depends_on:
      - db

  tileserver:
    image: maptiler/tileserver-gl
    volumes:
      - ./app/tileserver-gl:/data
    container_name: dev-tileserver
    restart: on-failure

  db:
    image: kartoza/postgis:12.1
    container_name: dev-database
    restart: on-failure
    volumes:
      # we are mounting a named volume here instead of a data directory path because of
      # a windows 10 premission issue. See https://github.com/docker-library/postgres/issues/435)
      # .........
      - postgres_data:/var/lib/postgresql
      - ./app/database:/opt
      - ./app/config:/opt/config
    env_file:
      - ./app/config/docker-env/db.env
    ports:
      - "65432:5432"

  api:
    build:
      context: ./app/api
    volumes:
      - /app/node_modules
      - ./app/api:/app
      - ./app/api/config:/app/config
    container_name: dev-api
    env_file:
      - ./app/config/docker-env/cron.env
      - ./app/config/docker-env/api.env

#-----WORDPRESS-----#

  # wp:
  #   image: wordpress:latest # https://hub.docker.com/_/wordpress/
  #   container_name: dev-wp
  #   ports:
  #     - 5000:80 # change ip if required
  #   volumes:
  #     - ./app/config/wp/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
  #     - ./app/wp/wp-app:/var/www/html # Full wordpress project
  #     #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
  #     #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
  #   env_file:
  #     - ./app/config/docker-env/wp.env
  #   depends_on:
  #     - wpdb
  #   networks:
  #     proxy:

  # wpcli:
  #   image: wordpress:cli
  #   container_name: dev-wpcli
  #   volumes:
  #     - ./app/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
  #     - ./app/wp/wp-app:/var/www/html
  #   depends_on:
  #     - wpdb
  #     - wp
  #   networks:
  #     proxy:
  
  # wppma:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: dev-wppma
  #   env_file:
  #     - ./app/config/docker-env/wp.env
  #   ports:
  #     - 8000:80
  #   networks:
  #     proxy:

  # wpdb:
  #   image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
  #   container_name: dev-wpdb
  #   env_file:
  #     - ./app/config/docker-env/wp.env
  #   ports:
  #     - 3307:3306 # change ip if required
  #   command: [
  #       '--default_authentication_plugin=mysql_native_password',
  #       '--character-set-server=utf8mb4',
  #       '--collation-server=utf8mb4_unicode_ci'
  #   ]
  #   volumes:
  #     - ./app/wp/wp-data:/docker-entrypoint-initdb.d
  #     - wpdb_data:/var/lib/mysql
  #   networks:
  #     proxy:

#-----CRON (Used for maintenance)-----#
  cron:
    build:
      dockerfile: Dockerfile
      context: ./app/cron
    image: dev-cron
    volumes:
      - ./app/cron/scripts:/opt/scripts
      - ./app/geoserver:/mnt/geoserver_data
    container_name: dev-cron
    env_file:
      - ./app/config/docker-env/db.env
      - ./app/config/docker-env/cron.env

#-----WIKI-----#

  # wiki:
  #   image: requarks/wiki:2.4.105
  #   depends_on:
  #     - db
  #   env_file:
  #     - ./app/config/docker-env/wiki.env
  #   container_name: dev-wiki
  #   restart: unless-stopped
  #   ports:
  #     - 10500:3000
  #   networks:
  #     proxy:

networks:
   default:
      external:
         name: app-net

volumes:
  postgres_data:
  # wpdb_data:
